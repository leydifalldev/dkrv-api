syntax = "proto3";
package collection;
option go_package = "collection";

message Coordinate {
  float lon = 1;
  float lat = 2;
}

message Picture { string src = 1; }

message Product {
  // @inject_tag: id:"ip"
  string id = 1; 
  string type = 2;
  string name = 3;
  int32 price = 4;
  int32 like = 5;
  repeated string recipes = 6;
  int32 notation = 7;
  int32 discount = 8;
  string picture = 9;
  string size = 10;
  int32 position = 11; 
}

message Collection {
  string id = 1;
  string name = 2;
  string categorycode = 3;
  string categoryname = 4;
  string placeid = 5;
  repeated Product products = 6;
}

message Gastronomie { string name = 1;}

message FoodCategory {
  string categoryname = 1;
  string categorycode = 2;
}

message Empty {}

message ListResponse {
  int32 status = 1;
  string error = 2;
  int64 total = 3;
  repeated Collection payload = 4;
}

message CreateRequest {
  Collection payload = 1;
}

message CreateResponse {
  int32 status = 1;
  string error = 2;
  string id = 3;
  bool payload = 4;
}

message DetailRequest {
  string id = 1;
}

message DetailResponse {
  int32 status = 1;
  string error = 2;
  Collection payload = 3;
}

message UpdateRequest {
  string id = 1;
  Collection payload = 2;
}

message UpdateResponse {
  int32 status = 1;
  string error = 2;
  bool payload = 3;
}

message UpdatePlaceRequest {
  string id = 1;
  Collection payload = 2;
}

message UpdateLocationRequest {
  string id = 1;
  Collection payload = 2;
}

message DeleteRequest {
  string id = 1;
}

message DeleteResponse {
  int32 status = 1;
  string error = 2;
  bool payload = 3;
}

message SearchRequest {
  SearchParams payload = 1;
}

message SearchParams {
  string q = 1;
  int32 from = 2;
  int32 to = 3;
  string fromdate = 4;
  string todate = 5;
  repeated string category = 6;
}

service CollectionService {
  rpc Search(SearchParams) returns (ListResponse);
  rpc Get(DetailRequest) returns (DetailResponse);
  rpc Add(CreateRequest) returns (CreateResponse);
  rpc Update(UpdateRequest) returns (UpdateResponse);
  rpc Delete(DeleteRequest) returns (DeleteResponse);
}
